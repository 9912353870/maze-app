{"ast":null,"code":"var _jsxFileName = \"/var/www/html/maze-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nclass Maze extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 0,\n      height: 0\n    };\n    this.rows = this.rows.bind(this);\n  }\n\n  componentDidMount() {\n    var width = prompt('Please enter width.');\n    var height = prompt('Please enter height');\n    this.setState({\n      width: width,\n      height: height\n    });\n  }\n\n  rows() {\n    var width = Number(this.state.width);\n    var height = Number(this.state.height);\n    let table = [];\n    let random_places = [];\n    var cw = Math.ceil(width / 2);\n    var ch = Math.ceil(height / 2);\n\n    for (let k = 1; k < width; k++) {\n      random_places.push(Math.floor(Math.random() * (width * height)));\n    }\n\n    for (let i = 1; i <= width; i++) {\n      let children = [];\n\n      for (let j = 1; j <= height; j++) {\n        if (i == cw && j == ch) {\n          children.push( /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 25\n            }\n          }, \"1\"));\n        } else if (random_places.includes(i * j)) {\n          children.push( /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }\n          }, 0));\n        } else {\n          children.push( /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }\n          }));\n        }\n      }\n\n      table.push( /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 18\n        }\n      }, children));\n    }\n\n    return table;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      border: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 18\n      }\n    }, this.rows())));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Maze, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/var/www/html/maze-app/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Maze","Component","constructor","props","state","width","height","rows","bind","componentDidMount","prompt","setState","Number","table","random_places","cw","Math","ceil","ch","k","push","floor","random","i","children","j","includes","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;;AACA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE,CAAR;AAAUC,MAAAA,MAAM,EAAE;AAAlB,KAAb;AACA,SAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAZ;AACD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,QAAIJ,KAAK,GAAGK,MAAM,CAAC,qBAAD,CAAlB;AACA,QAAIJ,MAAM,GAAGI,MAAM,CAAC,qBAAD,CAAnB;AACA,SAAKC,QAAL,CAAc;AAACN,MAAAA,KAAK,EAAEA,KAAR;AAAcC,MAAAA,MAAM,EAAEA;AAAtB,KAAd;AACD;;AACFC,EAAAA,IAAI,GAAE;AACH,QAAIF,KAAK,GAAGO,MAAM,CAAC,KAAKR,KAAL,CAAWC,KAAZ,CAAlB;AACA,QAAIC,MAAM,GAAGM,MAAM,CAAC,KAAKR,KAAL,CAAWE,MAAZ,CAAnB;AACA,QAAIO,KAAK,GAAG,EAAZ;AACA,QAAIC,aAAa,GAAG,EAApB;AACA,QAAIC,EAAE,GAAGC,IAAI,CAACC,IAAL,CAAUZ,KAAK,GAAC,CAAhB,CAAT;AACA,QAAIa,EAAE,GAAGF,IAAI,CAACC,IAAL,CAAUX,MAAM,GAAC,CAAjB,CAAT;;AACA,SAAI,IAAIa,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAAGd,KAAlB,EAAwBc,CAAC,EAAzB,EAA4B;AAAEL,MAAAA,aAAa,CAACM,IAAd,CAAmBJ,IAAI,CAACK,KAAL,CAAWL,IAAI,CAACM,MAAL,MAAiBjB,KAAK,GAAGC,MAAzB,CAAX,CAAnB;AAAmE;;AACjG,SAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIlB,KAArB,EAA4BkB,CAAC,EAA7B,EAAiC;AAC/B,UAAIC,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAInB,MAArB,EAA6BmB,CAAC,EAA9B,EAAkC;AAChC,YAAGF,CAAC,IAAIR,EAAL,IAAWU,CAAC,IAAGP,EAAlB,EAAqB;AACnBM,UAAAA,QAAQ,CAACJ,IAAT,eAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAd;AACD,SAFD,MAEM,IAAGN,aAAa,CAACY,QAAd,CAAuBH,CAAC,GAACE,CAAzB,CAAH,EAA+B;AACnCD,UAAAA,QAAQ,CAACJ,IAAT,eAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAM,CAAN,CAAd;AACA,SAFI,MAEA;AACJI,UAAAA,QAAQ,CAACJ,IAAT,eAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAd;AACA;AAEH;;AACDP,MAAAA,KAAK,CAACO,IAAN,eAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKI,QAAL,CAAX;AACD;;AACD,WAAOX,KAAP;AACD;;AACDc,EAAAA,MAAM,GAAE;AAER,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK;AAAO,MAAA,MAAM,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKpB,IAAL,EADH,CADH,CADL,CAAP;AAOC;;AA7C+B;;AA+ClCV,QAAQ,CAAC8B,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACA9B,aAAa,CAAC+B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nclass Maze extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {width: 0,height: 0};\n    this.rows = this.rows.bind(this);\n  }\n\n  componentDidMount(){\n    var width = prompt('Please enter width.');\n    var height = prompt('Please enter height');\n    this.setState({width: width,height: height});\n  }\n rows(){\n    var width = Number(this.state.width);\n    var height = Number(this.state.height);\n    let table = [];\n    let random_places = [];\n    var cw = Math.ceil(width/2);\n    var ch = Math.ceil(height/2);\n    for(let k = 1;k < width;k++){ random_places.push(Math.floor(Math.random() * (width * height) ));}\n    for (let i = 1; i <= width; i++) {\n      let children = []\n      for (let j = 1; j <= height; j++) {\n        if(i == cw && j== ch){\n          children.push(<td>1</td>);\n        }else if(random_places.includes(i*j)){\n          children.push(<td >{0}</td>);\n         }else{\n          children.push(<td ></td>);\n         }\n        \n      }\n      table.push(<tr>{children}</tr>)\n    }\n    return table;\n  }\n  render(){\n\n  return(<div> \n              <table border='1'>\n                 <tbody>\n                   {this.rows()}\n                 </tbody>\n               </table>\n        </div>);\n  }\n}\nReactDOM.render(\n  <React.StrictMode>\n    <Maze />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}